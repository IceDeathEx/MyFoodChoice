{"ast":null,"code":"var _jsxFileName = \"D:\\\\UOW_FYP\\\\FYP1\\\\myfoodchoice\\\\src\\\\pages\\\\UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport { useLocation, useNavigate, useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    gender: \"\",\n    accounttype: \"\"\n  });\n  const location = useLocation();\n  const navigate = useNavigate();\n  const userId = location.pathname.split(\"/\")[2];\n\n  // Define state variables and setter functions\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [accounttype, setAccountType] = useState(\"\");\n  const handleChange = e => {\n    setUser(prevUser => ({\n      ...prevUser,\n      [e.target.name]: e.target.value\n    }));\n\n    // Use setter functions for individual fields\n    switch (e.target.name) {\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"password\":\n        setPassword(e.target.value);\n        break;\n      case \"gender\":\n        setGender(e.target.value);\n        break;\n      case \"accounttype\":\n        setAccountType(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    Axios.get(`http://localhost:3002/userdetails/${id}`).then(res => {\n      console.log(res);\n      setUser(res.data[0]);\n    }).catch(err => console.log(err));\n  }, [id]);\n  const submitPost = async e => {\n    e.preventDefault();\n\n    // Define the submitPost function here\n    const updatedUserData = {\n      name,\n      email,\n      password,\n      gender,\n      accounttype\n    };\n    try {\n      await Axios.put(`http://localhost:3002/users/${userId}`, updatedUserData);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdatePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: user.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: user.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: user.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        value: user.gender,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"accounttype\",\n        value: user.accounttype,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitPost,\n        children: \"Update account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"KiN3puxeNhZsHoz8TU4JHXnlZA0=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","Update","_s","id","user","setUser","name","email","password","gender","accounttype","location","navigate","userId","pathname","split","setEmail","setName","setPassword","setGender","setAccountType","handleChange","e","prevUser","target","value","get","then","res","console","log","data","catch","err","submitPost","preventDefault","updatedUserData","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/UOW_FYP/FYP1/myfoodchoice/src/pages/UpdatePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport '../App.css';\r\nimport { useLocation, useNavigate, useParams } from 'react-router';\r\n\r\nconst Update = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        gender: \"\",\r\n        accounttype: \"\"\r\n    });\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const userId = location.pathname.split(\"/\")[2];\r\n\r\n    // Define state variables and setter functions\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [accounttype, setAccountType] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setUser((prevUser) => ({ ...prevUser, [e.target.name]: e.target.value }));\r\n\r\n        // Use setter functions for individual fields\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                setEmail(e.target.value);\r\n                break;\r\n            case \"name\":\r\n                setName(e.target.value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(e.target.value);\r\n                break;\r\n            case \"gender\":\r\n                setGender(e.target.value);\r\n                break;\r\n            case \"accounttype\":\r\n                setAccountType(e.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:3002/userdetails/${id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setUser(res.data[0]);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [id]);\r\n\r\n    const submitPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Define the submitPost function here\r\n        const updatedUserData = {\r\n            name,\r\n            email,\r\n            password,\r\n            gender,\r\n            accounttype\r\n        };\r\n\r\n        try {\r\n            await Axios.put(`http://localhost:3002/users/${userId}`, updatedUserData);\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"UpdatePost\">\r\n            <div className=\"uploadPost\">\r\n                <label>Email: </label>\r\n                <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} />\r\n                <label>Name: </label>\r\n                <input type=\"text\" name=\"name\" value={user.name} onChange={handleChange} />\r\n                <label>Password: </label>\r\n                <input type=\"text\" name=\"password\" value={user.password} onChange={handleChange} />\r\n                <label>Gender: </label>\r\n                <input type=\"text\" name=\"gender\" value={user.gender} onChange={handleChange} />\r\n                <label>Account Type: </label>\r\n                <input type=\"text\" name=\"accounttype\" value={user.accounttype} onChange={handleChange} />\r\n                <button onClick={submitPost}>Update account</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}