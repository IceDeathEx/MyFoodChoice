{"ast":null,"code":"var _jsxFileName = \"D:\\\\UOW_FYP\\\\FYP1\\\\myfoodchoice\\\\src\\\\pages\\\\UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdatePost() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    email: '',\n    name: '',\n    password: '',\n    gender: '',\n    accounttype: ''\n  });\n  const navigate = useNavigate();\n\n  // onSubmit handler\n  const submitPost = () => {\n    Axios.put(`http://localhost:3002/api/update`, formValues).then(res => {\n      if (res.status === 200) {\n        alert('Account successfully updated');\n        navigate('/');\n      } else {\n        alert('Something went wrong');\n      }\n    }).catch(err => {\n      console.error(err);\n      alert('An error occurred while updating the account');\n    });\n  };\n\n  // useEffect to load data\n  useEffect(() => {\n    // Replace the following line with the logic to fetch the user's data by their ID\n    const userId = 1; // Replace with the actual user ID you want to update\n    Axios.get(`http://localhost:3002/api/user/${userId}`).then(res => {\n      const {\n        email,\n        name,\n        password,\n        gender,\n        accounttype\n      } = res.data;\n      setFormValues({\n        email,\n        name,\n        password,\n        gender,\n        accounttype\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdatePost\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formValues.email,\n      onChange: e => setFormValues({\n        ...formValues,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitPost,\n      children: \"Update account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdatePost, \"h9E21HagJoySPpY002pwtdDDEus=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","jsxDEV","_jsxDEV","UpdatePost","_s","formValues","setFormValues","email","name","password","gender","accounttype","navigate","submitPost","put","then","res","status","alert","catch","err","console","error","userId","get","data","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/UOW_FYP/FYP1/myfoodchoice/src/pages/UpdatePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport '../App.css';\r\nimport { useNavigate } from 'react-router';\r\n\r\nfunction UpdatePost() {\r\n  const [formValues, setFormValues] = useState({\r\n    email: '',\r\n    name: '',\r\n    password: '',\r\n    gender: '',\r\n    accounttype: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // onSubmit handler\r\n  const submitPost = () => {\r\n    Axios.put(`http://localhost:3002/api/update`, formValues)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          alert('Account successfully updated');\r\n          navigate('/');\r\n        } else {\r\n          alert('Something went wrong');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert('An error occurred while updating the account');\r\n      });\r\n  };\r\n\r\n  // useEffect to load data\r\n  useEffect(() => {\r\n    // Replace the following line with the logic to fetch the user's data by their ID\r\n    const userId = 1; // Replace with the actual user ID you want to update\r\n    Axios.get(`http://localhost:3002/api/user/${userId}`)\r\n      .then((res) => {\r\n        const { email, name, password, gender, accounttype } = res.data;\r\n        setFormValues({ email, name, password, gender, accounttype });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"UpdatePost\">\r\n      <label>Email: </label>\r\n      <input\r\n        type=\"text\"\r\n        value={formValues.email}\r\n        onChange={(e) => setFormValues({ ...formValues, email: e.target.value })}\r\n      />\r\n      {/* Other input fields for name, password, gender, and accounttype */}\r\n      <button onClick={submitPost}>Update account</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC;IAC3CU,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBd,KAAK,CAACe,GAAG,CAAE,kCAAiC,EAAET,UAAU,CAAC,CACtDU,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,8BAA8B,CAAC;QACrCN,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLM,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBF,KAAK,CAAC,8CAA8C,CAAC;IACvD,CAAC,CAAC;EACN,CAAC;;EAED;EACApB,SAAS,CAAC,MAAM;IACd;IACA,MAAMyB,MAAM,GAAG,CAAC,CAAC,CAAC;IAClBxB,KAAK,CAACyB,GAAG,CAAE,kCAAiCD,MAAO,EAAC,CAAC,CAClDR,IAAI,CAAEC,GAAG,IAAK;MACb,MAAM;QAAET,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,MAAM;QAAEC;MAAY,CAAC,GAAGK,GAAG,CAACS,IAAI;MAC/DnB,aAAa,CAAC;QAAEC,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,MAAM;QAAEC;MAAY,CAAC,CAAC;IAC/D,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACK,GAAG,CAACN,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB1B,OAAA;MAAA0B,QAAA,EAAO;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtB9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE7B,UAAU,CAACE,KAAM;MACxB4B,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAEE,KAAK,EAAE6B,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eAEF9B,OAAA;MAAQoC,OAAO,EAAEzB,UAAW;MAAAe,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAAC5B,EAAA,CAnDQD,UAAU;EAAA,QAQAH,WAAW;AAAA;AAAAuC,EAAA,GARrBpC,UAAU;AAqDnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}