{"ast":null,"code":"// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on September 21, 2021.\n// The new AuthNextFactor packet is now available.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n'use strict';\n\nconst process = require('process');\nconst AuthNextFactor = require('./auth_next_factor');\nconst AuthSwitchRequest = require('./auth_switch_request');\nconst AuthSwitchRequestMoreData = require('./auth_switch_request_more_data');\nconst AuthSwitchResponse = require('./auth_switch_response');\nconst BinaryRow = require('./binary_row');\nconst BinlogDump = require('./binlog_dump');\nconst ChangeUser = require('./change_user');\nconst CloseStatement = require('./close_statement');\nconst ColumnDefinition = require('./column_definition');\nconst Execute = require('./execute');\nconst Handshake = require('./handshake');\nconst HandshakeResponse = require('./handshake_response');\nconst PrepareStatement = require('./prepare_statement');\nconst PreparedStatementHeader = require('./prepared_statement_header');\nconst Query = require('./query');\nconst RegisterSlave = require('./register_slave');\nconst ResultSetHeader = require('./resultset_header');\nconst SSLRequest = require('./ssl_request');\nconst TextRow = require('./text_row');\nconst ctorMap = {\n  AuthNextFactor,\n  AuthSwitchRequest,\n  AuthSwitchRequestMoreData,\n  AuthSwitchResponse,\n  BinaryRow,\n  BinlogDump,\n  ChangeUser,\n  CloseStatement,\n  ColumnDefinition,\n  Execute,\n  Handshake,\n  HandshakeResponse,\n  PrepareStatement,\n  PreparedStatementHeader,\n  Query,\n  RegisterSlave,\n  ResultSetHeader,\n  SSLRequest,\n  TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor]) => {\n  module.exports[name] = ctor;\n  // monkey-patch it to include name if debug is on\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      const old = ctor.prototype.toPacket;\n      ctor.prototype.toPacket = function () {\n        const p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n});\n\n// simple packets:\nconst Packet = require('./packet');\nexports.Packet = Packet;\nclass OK {\n  static toPacket(args, encoding) {\n    args = args || {};\n    const affectedRows = args.affectedRows || 0;\n    const insertId = args.insertId || 0;\n    const serverStatus = args.serverStatus || 0;\n    const warningCount = args.warningCount || 0;\n    const message = args.message || '';\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n    length += Packet.lengthCodedNumberLength(insertId);\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0);\n    packet.writeLengthCodedNumber(affectedRows);\n    packet.writeLengthCodedNumber(insertId);\n    packet.writeInt16(serverStatus);\n    packet.writeInt16(warningCount);\n    packet.writeString(message, encoding);\n    packet._name = 'OK';\n    return packet;\n  }\n}\nexports.OK = OK;\n\n// warnings, statusFlags\nclass EOF {\n  static toPacket(warnings, statusFlags) {\n    if (typeof warnings === 'undefined') {\n      warnings = 0;\n    }\n    if (typeof statusFlags === 'undefined') {\n      statusFlags = 0;\n    }\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    packet.writeInt16(warnings);\n    packet.writeInt16(statusFlags);\n    packet._name = 'EOF';\n    return packet;\n  }\n}\nexports.EOF = EOF;\nclass Error {\n  static toPacket(args, encoding) {\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xff);\n    packet.writeInt16(args.code);\n    // TODO: sql state parameter\n    packet.writeString('#_____', encoding);\n    packet.writeString(args.message, encoding);\n    packet._name = 'Error';\n    return packet;\n  }\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const code = packet.readInt16();\n    packet.readString(1, 'ascii'); // sql state marker\n    // The SQL state of the ERR_Packet which is always 5 bytes long.\n    // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n    packet.readString(5, 'ascii'); // sql state (ignore for now)\n    const message = packet.readNullTerminatedString('utf8');\n    const error = new Error();\n    error.message = message;\n    error.code = code;\n    return error;\n  }\n}\nexports.Error = Error;","map":{"version":3,"names":["process","require","AuthNextFactor","AuthSwitchRequest","AuthSwitchRequestMoreData","AuthSwitchResponse","BinaryRow","BinlogDump","ChangeUser","CloseStatement","ColumnDefinition","Execute","Handshake","HandshakeResponse","PrepareStatement","PreparedStatementHeader","Query","RegisterSlave","ResultSetHeader","SSLRequest","TextRow","ctorMap","Object","entries","forEach","name","ctor","module","exports","env","NODE_DEBUG","prototype","toPacket","old","p","call","_name","Packet","OK","args","encoding","affectedRows","insertId","serverStatus","warningCount","message","length","lengthCodedNumberLength","buffer","Buffer","allocUnsafe","packet","offset","writeInt8","writeLengthCodedNumber","writeInt16","writeString","EOF","warnings","statusFlags","Error","byteLength","code","fromPacket","readInt8","readInt16","readString","readNullTerminatedString","error"],"sources":["C:/Users/runes/FYP/myfoodchoice/node_modules/mysql2/lib/packets/index.js"],"sourcesContent":["// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on September 21, 2021.\n// The new AuthNextFactor packet is now available.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n'use strict';\n\nconst process = require('process');\n\nconst AuthNextFactor = require('./auth_next_factor');\nconst AuthSwitchRequest = require('./auth_switch_request');\nconst AuthSwitchRequestMoreData = require('./auth_switch_request_more_data');\nconst AuthSwitchResponse = require('./auth_switch_response');\nconst BinaryRow = require('./binary_row');\nconst BinlogDump = require('./binlog_dump');\nconst ChangeUser = require('./change_user');\nconst CloseStatement = require('./close_statement');\nconst ColumnDefinition = require('./column_definition');\nconst Execute = require('./execute');\nconst Handshake = require('./handshake');\nconst HandshakeResponse = require('./handshake_response');\nconst PrepareStatement = require('./prepare_statement');\nconst PreparedStatementHeader = require('./prepared_statement_header');\nconst Query = require('./query');\nconst RegisterSlave = require('./register_slave');\nconst ResultSetHeader = require('./resultset_header');\nconst SSLRequest = require('./ssl_request');\nconst TextRow = require('./text_row');\n\nconst ctorMap = {\n  AuthNextFactor,\n  AuthSwitchRequest,\n  AuthSwitchRequestMoreData,\n  AuthSwitchResponse,\n  BinaryRow,\n  BinlogDump,\n  ChangeUser,\n  CloseStatement,\n  ColumnDefinition,\n  Execute,\n  Handshake,\n  HandshakeResponse,\n  PrepareStatement,\n  PreparedStatementHeader,\n  Query,\n  RegisterSlave,\n  ResultSetHeader,\n  SSLRequest,\n  TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor]) => {\n  module.exports[name] = ctor;\n  // monkey-patch it to include name if debug is on\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      const old = ctor.prototype.toPacket;\n      ctor.prototype.toPacket = function() {\n        const p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n});\n\n// simple packets:\nconst Packet = require('./packet');\nexports.Packet = Packet;\n\nclass OK {\n  static toPacket(args, encoding) {\n    args = args || {};\n    const affectedRows = args.affectedRows || 0;\n    const insertId = args.insertId || 0;\n    const serverStatus = args.serverStatus || 0;\n    const warningCount = args.warningCount || 0;\n    const message = args.message || '';\n\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n    length += Packet.lengthCodedNumberLength(insertId);\n\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0);\n    packet.writeLengthCodedNumber(affectedRows);\n    packet.writeLengthCodedNumber(insertId);\n    packet.writeInt16(serverStatus);\n    packet.writeInt16(warningCount);\n    packet.writeString(message, encoding);\n    packet._name = 'OK';\n    return packet;\n  }\n}\n\nexports.OK = OK;\n\n// warnings, statusFlags\nclass EOF {\n  static toPacket(warnings, statusFlags) {\n    if (typeof warnings === 'undefined') {\n      warnings = 0;\n    }\n    if (typeof statusFlags === 'undefined') {\n      statusFlags = 0;\n    }\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    packet.writeInt16(warnings);\n    packet.writeInt16(statusFlags);\n    packet._name = 'EOF';\n    return packet;\n  }\n}\n\nexports.EOF = EOF;\n\nclass Error {\n  static toPacket(args, encoding) {\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xff);\n    packet.writeInt16(args.code);\n    // TODO: sql state parameter\n    packet.writeString('#_____', encoding);\n    packet.writeString(args.message, encoding);\n    packet._name = 'Error';\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const code = packet.readInt16();\n    packet.readString(1, 'ascii'); // sql state marker\n    // The SQL state of the ERR_Packet which is always 5 bytes long.\n    // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n    packet.readString(5, 'ascii'); // sql state (ignore for now)\n    const message = packet.readNullTerminatedString('utf8');\n    const error = new Error();\n    error.message = message;\n    error.code = code;\n    return error;\n  }\n}\n\nexports.Error = Error;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}