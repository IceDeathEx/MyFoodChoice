{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  0x00: 'DECIMAL',\n  // aka DECIMAL \n  0x01: 'TINY',\n  // aka TINYINT, 1 byte\n  0x02: 'SHORT',\n  // aka SMALLINT, 2 bytes\n  0x03: 'LONG',\n  // aka INT, 4 bytes\n  0x04: 'FLOAT',\n  // aka FLOAT, 4-8 bytes\n  0x05: 'DOUBLE',\n  // aka DOUBLE, 8 bytes\n  0x06: 'NULL',\n  // NULL (used for prepared statements, I think)\n  0x07: 'TIMESTAMP',\n  // aka TIMESTAMP\n  0x08: 'LONGLONG',\n  // aka BIGINT, 8 bytes\n  0x09: 'INT24',\n  // aka MEDIUMINT, 3 bytes\n  0x0a: 'DATE',\n  // aka DATE\n  0x0b: 'TIME',\n  // aka TIME\n  0x0c: 'DATETIME',\n  // aka DATETIME\n  0x0d: 'YEAR',\n  // aka YEAR, 1 byte (don't ask)\n  0x0e: 'NEWDATE',\n  // aka ?\n  0x0f: 'VARCHAR',\n  // aka VARCHAR (?)\n  0x10: 'BIT',\n  // aka BIT, 1-8 byte\n  0xf5: 'JSON',\n  0xf6: 'NEWDECIMAL',\n  // aka DECIMAL\n  0xf7: 'ENUM',\n  // aka ENUM\n  0xf8: 'SET',\n  // aka SET\n  0xf9: 'TINY_BLOB',\n  // aka TINYBLOB, TINYTEXT\n  0xfa: 'MEDIUM_BLOB',\n  // aka MEDIUMBLOB, MEDIUMTEXT\n  0xfb: 'LONG_BLOB',\n  // aka LONGBLOG, LONGTEXT\n  0xfc: 'BLOB',\n  // aka BLOB, TEXT\n  0xfd: 'VAR_STRING',\n  // aka VARCHAR, VARBINARY\n  0xfe: 'STRING',\n  // aka CHAR, BINARY\n  0xff: 'GEOMETRY' // aka GEOMETRY\n};\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nmodule.exports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nmodule.exports.TINY = 0x01; // aka TINYINT, 1 byte\nmodule.exports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nmodule.exports.LONG = 0x03; // aka INT, 4 bytes\nmodule.exports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nmodule.exports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nmodule.exports.NULL = 0x06; // NULL (used for prepared statements, I think)\nmodule.exports.TIMESTAMP = 0x07; // aka TIMESTAMP\nmodule.exports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nmodule.exports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nmodule.exports.DATE = 0x0a; // aka DATE\nmodule.exports.TIME = 0x0b; // aka TIME\nmodule.exports.DATETIME = 0x0c; // aka DATETIME\nmodule.exports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nmodule.exports.NEWDATE = 0x0e; // aka ?\nmodule.exports.VARCHAR = 0x0f; // aka VARCHAR (?)\nmodule.exports.BIT = 0x10; // aka BIT, 1-8 byte\nmodule.exports.JSON = 0xf5;\nmodule.exports.NEWDECIMAL = 0xf6; // aka DECIMAL\nmodule.exports.ENUM = 0xf7; // aka ENUM\nmodule.exports.SET = 0xf8; // aka SET\nmodule.exports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nmodule.exports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nmodule.exports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nmodule.exports.BLOB = 0xfc; // aka BLOB, TEXT\nmodule.exports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nmodule.exports.STRING = 0xfe; // aka CHAR, BINARY\nmodule.exports.GEOMETRY = 0xff; // aka GEOMETRY","map":{"version":3,"names":["module","exports","DECIMAL","TINY","SHORT","LONG","FLOAT","DOUBLE","NULL","TIMESTAMP","LONGLONG","INT24","DATE","TIME","DATETIME","YEAR","NEWDATE","VARCHAR","BIT","JSON","NEWDECIMAL","ENUM","SET","TINY_BLOB","MEDIUM_BLOB","LONG_BLOB","BLOB","VAR_STRING","STRING","GEOMETRY"],"sources":["D:/UOW_FYP/FYP1/myfoodchoice/node_modules/mysql2/lib/constants/types.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n  0x00: 'DECIMAL', // aka DECIMAL \n  0x01: 'TINY', // aka TINYINT, 1 byte\n  0x02: 'SHORT', // aka SMALLINT, 2 bytes\n  0x03: 'LONG', // aka INT, 4 bytes\n  0x04: 'FLOAT', // aka FLOAT, 4-8 bytes\n  0x05: 'DOUBLE', // aka DOUBLE, 8 bytes\n  0x06: 'NULL', // NULL (used for prepared statements, I think)\n  0x07: 'TIMESTAMP', // aka TIMESTAMP\n  0x08: 'LONGLONG', // aka BIGINT, 8 bytes\n  0x09: 'INT24', // aka MEDIUMINT, 3 bytes\n  0x0a: 'DATE', // aka DATE\n  0x0b: 'TIME', // aka TIME\n  0x0c: 'DATETIME', // aka DATETIME\n  0x0d: 'YEAR', // aka YEAR, 1 byte (don't ask)\n  0x0e: 'NEWDATE', // aka ?\n  0x0f: 'VARCHAR', // aka VARCHAR (?)\n  0x10: 'BIT', // aka BIT, 1-8 byte\n  0xf5: 'JSON',\n  0xf6: 'NEWDECIMAL', // aka DECIMAL\n  0xf7: 'ENUM', // aka ENUM\n  0xf8: 'SET', // aka SET\n  0xf9: 'TINY_BLOB', // aka TINYBLOB, TINYTEXT\n  0xfa: 'MEDIUM_BLOB', // aka MEDIUMBLOB, MEDIUMTEXT\n  0xfb: 'LONG_BLOB', // aka LONGBLOG, LONGTEXT\n  0xfc: 'BLOB', // aka BLOB, TEXT\n  0xfd: 'VAR_STRING', // aka VARCHAR, VARBINARY\n  0xfe: 'STRING', // aka CHAR, BINARY\n  0xff: 'GEOMETRY' // aka GEOMETRY\n};\n\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nmodule.exports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nmodule.exports.TINY = 0x01; // aka TINYINT, 1 byte\nmodule.exports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nmodule.exports.LONG = 0x03; // aka INT, 4 bytes\nmodule.exports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nmodule.exports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nmodule.exports.NULL = 0x06; // NULL (used for prepared statements, I think)\nmodule.exports.TIMESTAMP = 0x07; // aka TIMESTAMP\nmodule.exports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nmodule.exports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nmodule.exports.DATE = 0x0a; // aka DATE\nmodule.exports.TIME = 0x0b; // aka TIME\nmodule.exports.DATETIME = 0x0c; // aka DATETIME\nmodule.exports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nmodule.exports.NEWDATE = 0x0e; // aka ?\nmodule.exports.VARCHAR = 0x0f; // aka VARCHAR (?)\nmodule.exports.BIT = 0x10; // aka BIT, 1-8 byte\nmodule.exports.JSON = 0xf5;\nmodule.exports.NEWDECIMAL = 0xf6; // aka DECIMAL\nmodule.exports.ENUM = 0xf7; // aka ENUM\nmodule.exports.SET = 0xf8; // aka SET\nmodule.exports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nmodule.exports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nmodule.exports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nmodule.exports.BLOB = 0xfc; // aka BLOB, TEXT\nmodule.exports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nmodule.exports.STRING = 0xfe; // aka CHAR, BINARY\nmodule.exports.GEOMETRY = 0xff; // aka GEOMETRY\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACf,IAAI,EAAE,SAAS;EAAE;EACjB,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,OAAO;EAAE;EACf,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,OAAO;EAAE;EACf,IAAI,EAAE,QAAQ;EAAE;EAChB,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,WAAW;EAAE;EACnB,IAAI,EAAE,UAAU;EAAE;EAClB,IAAI,EAAE,OAAO;EAAE;EACf,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,UAAU;EAAE;EAClB,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,SAAS;EAAE;EACjB,IAAI,EAAE,SAAS;EAAE;EACjB,IAAI,EAAE,KAAK;EAAE;EACb,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,YAAY;EAAE;EACpB,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,KAAK;EAAE;EACb,IAAI,EAAE,WAAW;EAAE;EACnB,IAAI,EAAE,aAAa;EAAE;EACrB,IAAI,EAAE,WAAW;EAAE;EACnB,IAAI,EAAE,MAAM;EAAE;EACd,IAAI,EAAE,YAAY;EAAE;EACpB,IAAI,EAAE,QAAQ;EAAE;EAChB,IAAI,EAAE,UAAU,CAAC;AACnB,CAAC;;AAGD;AACA;AACAD,MAAM,CAACC,OAAO,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;AAC/BF,MAAM,CAACC,OAAO,CAACE,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5BH,MAAM,CAACC,OAAO,CAACG,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7BJ,MAAM,CAACC,OAAO,CAACI,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5BL,MAAM,CAACC,OAAO,CAACK,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7BN,MAAM,CAACC,OAAO,CAACM,MAAM,GAAG,IAAI,CAAC,CAAC;AAC9BP,MAAM,CAACC,OAAO,CAACO,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5BR,MAAM,CAACC,OAAO,CAACQ,SAAS,GAAG,IAAI,CAAC,CAAC;AACjCT,MAAM,CAACC,OAAO,CAACS,QAAQ,GAAG,IAAI,CAAC,CAAC;AAChCV,MAAM,CAACC,OAAO,CAACU,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7BX,MAAM,CAACC,OAAO,CAACW,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5BZ,MAAM,CAACC,OAAO,CAACY,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5Bb,MAAM,CAACC,OAAO,CAACa,QAAQ,GAAG,IAAI,CAAC,CAAC;AAChCd,MAAM,CAACC,OAAO,CAACc,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5Bf,MAAM,CAACC,OAAO,CAACe,OAAO,GAAG,IAAI,CAAC,CAAC;AAC/BhB,MAAM,CAACC,OAAO,CAACgB,OAAO,GAAG,IAAI,CAAC,CAAC;AAC/BjB,MAAM,CAACC,OAAO,CAACiB,GAAG,GAAG,IAAI,CAAC,CAAC;AAC3BlB,MAAM,CAACC,OAAO,CAACkB,IAAI,GAAG,IAAI;AAC1BnB,MAAM,CAACC,OAAO,CAACmB,UAAU,GAAG,IAAI,CAAC,CAAC;AAClCpB,MAAM,CAACC,OAAO,CAACoB,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5BrB,MAAM,CAACC,OAAO,CAACqB,GAAG,GAAG,IAAI,CAAC,CAAC;AAC3BtB,MAAM,CAACC,OAAO,CAACsB,SAAS,GAAG,IAAI,CAAC,CAAC;AACjCvB,MAAM,CAACC,OAAO,CAACuB,WAAW,GAAG,IAAI,CAAC,CAAC;AACnCxB,MAAM,CAACC,OAAO,CAACwB,SAAS,GAAG,IAAI,CAAC,CAAC;AACjCzB,MAAM,CAACC,OAAO,CAACyB,IAAI,GAAG,IAAI,CAAC,CAAC;AAC5B1B,MAAM,CAACC,OAAO,CAAC0B,UAAU,GAAG,IAAI,CAAC,CAAC;AAClC3B,MAAM,CAACC,OAAO,CAAC2B,MAAM,GAAG,IAAI,CAAC,CAAC;AAC9B5B,MAAM,CAACC,OAAO,CAAC4B,QAAQ,GAAG,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}