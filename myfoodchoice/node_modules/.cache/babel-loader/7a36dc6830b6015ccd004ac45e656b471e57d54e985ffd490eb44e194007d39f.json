{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\runes\\\\FYP\\\\myfoodchoice\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Login from './Login.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n// const express = require(\"express\")\n// const { addUser, getUser } = require(\"./utils/queryHelper\")\n// const app = express()\n\n// const genericError = \"Sorry, something went wrong!\"\n\n// app.use(express.json())\n\n// app.post(\"/\", async function (request, response) {\n//   try {\n//     const { email, name, password, gender, acctype } = request.body\n//     const [result] = await addUser(email, name, password, gender, acctype)\n//     if (result.insertId) {\n//       const [data] = await getUser(result.insertId)\n//       response.send({ success: true, result: data[0] })\n//     } else {\n//       response.status(500).send({\n//         success: false,\n//         error: genericError,\n//       })\n//     }\n//   } catch (error) {\n//     response.status(500).send({\n//       success: false,\n//       error: genericError,\n//     })\n//   }\n// })\n\n// app.get(\"/:id\", async function (request, response) {\n//   const { email } = request.params\n//   try {\n//     const [result] = await getUser(email)\n//     if (result.length > 0) {\n//       response.send({ success: true, result: result[0] })\n//     } else {\n//       response.status(404).send({\n//         success: false,\n//         error: `No user found with id ${id}`,\n//       })\n//     }\n//   } catch (error) {\n//     response.status(500).send({\n//       success: false,\n//       error: genericError,\n//     })\n//   }\n// })\n\n// app.listen(8001)","map":{"version":3,"names":["React","ReactDOM","App","Login","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/runes/FYP/myfoodchoice/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Login from './Login.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    <Login />\n  </React.StrictMode>\n);\n// const express = require(\"express\")\n// const { addUser, getUser } = require(\"./utils/queryHelper\")\n// const app = express()\n\n// const genericError = \"Sorry, something went wrong!\"\n\n// app.use(express.json())\n\n// app.post(\"/\", async function (request, response) {\n//   try {\n//     const { email, name, password, gender, acctype } = request.body\n//     const [result] = await addUser(email, name, password, gender, acctype)\n//     if (result.insertId) {\n//       const [data] = await getUser(result.insertId)\n//       response.send({ success: true, result: data[0] })\n//     } else {\n//       response.status(500).send({\n//         success: false,\n//         error: genericError,\n//       })\n//     }\n//   } catch (error) {\n//     response.status(500).send({\n//       success: false,\n//       error: genericError,\n//     })\n//   }\n// })\n\n// app.get(\"/:id\", async function (request, response) {\n//   const { email } = request.params\n//   try {\n//     const [result] = await getUser(email)\n//     if (result.length > 0) {\n//       response.send({ success: true, result: result[0] })\n//     } else {\n//       response.status(404).send({\n//         success: false,\n//         error: `No user found with id ${id}`,\n//       })\n//     }\n//   } catch (error) {\n//     response.status(500).send({\n//       success: false,\n//       error: genericError,\n//     })\n//   }\n// })\n\n// app.listen(8001)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,gBACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACPX,OAAA,CAACF,KAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACO,CACpB,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}