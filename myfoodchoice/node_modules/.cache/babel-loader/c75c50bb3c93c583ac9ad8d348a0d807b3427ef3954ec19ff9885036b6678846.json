{"ast":null,"code":"// This file was modified by Oracle on July 5, 2021.\n// Errors generated by asynchronous authentication plugins are now being\n// handled and subsequently emitted at the command level.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n'use strict';\n\nconst Packets = require('../packets/index.js');\nconst sha256_password = require('../auth_plugins/sha256_password');\nconst caching_sha2_password = require('../auth_plugins/caching_sha2_password.js');\nconst mysql_native_password = require('../auth_plugins/mysql_native_password.js');\nconst mysql_clear_password = require('../auth_plugins/mysql_clear_password.js');\nconst standardAuthPlugins = {\n  sha256_password: sha256_password({}),\n  caching_sha2_password: caching_sha2_password({}),\n  mysql_native_password: mysql_native_password({}),\n  mysql_clear_password: mysql_clear_password({})\n};\nfunction warnLegacyAuthSwitch() {\n  console.warn('WARNING! authSwitchHandler api is deprecated, please use new authPlugins api');\n}\nfunction authSwitchPluginError(error, command) {\n  // Authentication errors are fatal\n  error.code = 'AUTH_SWITCH_PLUGIN_ERROR';\n  error.fatal = true;\n  command.emit('error', error);\n}\nfunction authSwitchRequest(packet, connection, command) {\n  const {\n    pluginName,\n    pluginData\n  } = Packets.AuthSwitchRequest.fromPacket(packet);\n  let authPlugin = connection.config.authPlugins && connection.config.authPlugins[pluginName];\n\n  // legacy plugin api don't allow to override mysql_native_password\n  // if pluginName is mysql_native_password it's using standard auth4.1 auth\n  if (connection.config.authSwitchHandler && pluginName !== 'mysql_native_password') {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({\n      pluginName,\n      pluginData\n    }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n  if (!authPlugin) {\n    authPlugin = standardAuthPlugins[pluginName];\n  }\n  if (!authPlugin) {\n    throw new Error(`Server requests authentication using unknown plugin ${pluginName}. See ${'TODO: add plugins doco here'} on how to configure or author authentication plugins.`);\n  }\n  connection._authPlugin = authPlugin({\n    connection,\n    command\n  });\n  Promise.resolve(connection._authPlugin(pluginData)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\nfunction authSwitchRequestMoreData(packet, connection, command) {\n  const {\n    data\n  } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\n  if (connection.config.authSwitchHandler) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({\n      pluginData: data\n    }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n  if (!connection._authPlugin) {\n    throw new Error('AuthPluginMoreData received but no auth plugin instance found');\n  }\n  Promise.resolve(connection._authPlugin(data)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\nmodule.exports = {\n  authSwitchRequest,\n  authSwitchRequestMoreData\n};","map":{"version":3,"names":["Packets","require","sha256_password","caching_sha2_password","mysql_native_password","mysql_clear_password","standardAuthPlugins","warnLegacyAuthSwitch","console","warn","authSwitchPluginError","error","command","code","fatal","emit","authSwitchRequest","packet","connection","pluginName","pluginData","AuthSwitchRequest","fromPacket","authPlugin","config","authPlugins","authSwitchHandler","legacySwitchHandler","err","data","writePacket","AuthSwitchResponse","toPacket","Error","_authPlugin","Promise","resolve","then","catch","authSwitchRequestMoreData","AuthSwitchRequestMoreData","module","exports"],"sources":["C:/Users/runes/FYP/myfoodchoice/node_modules/mysql2/lib/commands/auth_switch.js"],"sourcesContent":["// This file was modified by Oracle on July 5, 2021.\n// Errors generated by asynchronous authentication plugins are now being\n// handled and subsequently emitted at the command level.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n'use strict';\n\nconst Packets = require('../packets/index.js');\nconst sha256_password = require('../auth_plugins/sha256_password');\nconst caching_sha2_password = require('../auth_plugins/caching_sha2_password.js');\nconst mysql_native_password = require('../auth_plugins/mysql_native_password.js');\nconst mysql_clear_password = require('../auth_plugins/mysql_clear_password.js');\n\nconst standardAuthPlugins = {\n  sha256_password: sha256_password({}),\n  caching_sha2_password: caching_sha2_password({}),\n  mysql_native_password: mysql_native_password({}),\n  mysql_clear_password: mysql_clear_password({})\n};\n\nfunction warnLegacyAuthSwitch() {\n  console.warn(\n    'WARNING! authSwitchHandler api is deprecated, please use new authPlugins api'\n  );\n}\n\nfunction authSwitchPluginError(error, command) {\n  // Authentication errors are fatal\n  error.code = 'AUTH_SWITCH_PLUGIN_ERROR';\n  error.fatal = true;\n\n  command.emit('error', error);\n}\n\nfunction authSwitchRequest(packet, connection, command) {\n  const { pluginName, pluginData } = Packets.AuthSwitchRequest.fromPacket(\n    packet\n  );\n  let authPlugin =\n    connection.config.authPlugins && connection.config.authPlugins[pluginName];\n\n  // legacy plugin api don't allow to override mysql_native_password\n  // if pluginName is mysql_native_password it's using standard auth4.1 auth\n  if (\n    connection.config.authSwitchHandler &&\n    pluginName !== 'mysql_native_password'\n  ) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginName, pluginData }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n  if (!authPlugin) {\n    authPlugin = standardAuthPlugins[pluginName];\n  }\n  if (!authPlugin) {\n    throw new Error(\n      `Server requests authentication using unknown plugin ${pluginName}. See ${'TODO: add plugins doco here'} on how to configure or author authentication plugins.`\n    );\n  }\n  connection._authPlugin = authPlugin({ connection, command });\n  Promise.resolve(connection._authPlugin(pluginData)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\n\nfunction authSwitchRequestMoreData(packet, connection, command) {\n  const { data } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\n\n  if (connection.config.authSwitchHandler) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginData: data }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n\n  if (!connection._authPlugin) {\n    throw new Error(\n      'AuthPluginMoreData received but no auth plugin instance found'\n    );\n  }\n  Promise.resolve(connection._authPlugin(data)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\n\nmodule.exports = {\n  authSwitchRequest,\n  authSwitchRequestMoreData\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}