{"ast":null,"code":"var _jsxFileName = \"D:\\\\UOW_FYP\\\\FYP1\\\\myfoodchoice\\\\src\\\\pages\\\\Transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transaction = ({\n  selectedItems\n}) => {\n  _s();\n  // State to store the user's transaction history\n  const [transactionHistory, setTransactionHistory] = useState([]);\n\n  // Effect to update transaction history when selectedItems change\n  useEffect(() => {\n    if (selectedItems && selectedItems.length > 0) {\n      // Create a new transaction record with selected items\n      const transactionRecord = {\n        date: new Date().toLocaleString(),\n        // Store the transaction date and time\n        items: selectedItems\n      };\n\n      // Update the transaction history with the new record\n      setTransactionHistory(prevHistory => [...prevHistory, transactionRecord]);\n    }\n  }, [selectedItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divcss\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transaction page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Checkout History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), transactionHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-details\",\n        children: transactionHistory.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-record\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Transaction Date: \", transaction.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Selected Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: transaction.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.name, \" - \", item.points, \" Points\"]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No checkout history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Transaction, \"+w73iTW/yBRP9ohnONGjTzSUoKY=\");\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Transaction","selectedItems","_s","transactionHistory","setTransactionHistory","length","transactionRecord","date","Date","toLocaleString","items","prevHistory","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","transaction","index","item","name","points","id","_c","$RefreshReg$"],"sources":["D:/UOW_FYP/FYP1/myfoodchoice/src/pages/Transaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nconst Transaction = ({ selectedItems }) => {\r\n  // State to store the user's transaction history\r\n  const [transactionHistory, setTransactionHistory] = useState([]);\r\n\r\n  // Effect to update transaction history when selectedItems change\r\n  useEffect(() => {\r\n    if (selectedItems && selectedItems.length > 0) {\r\n      // Create a new transaction record with selected items\r\n      const transactionRecord = {\r\n        date: new Date().toLocaleString(), // Store the transaction date and time\r\n        items: selectedItems,\r\n      };\r\n\r\n      // Update the transaction history with the new record\r\n      setTransactionHistory((prevHistory) => [...prevHistory, transactionRecord]);\r\n    }\r\n  }, [selectedItems]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"divcss\">\r\n        <h2>Transaction page</h2>\r\n        <h3>Checkout History</h3>\r\n        {transactionHistory.length > 0 ? (\r\n          <div className=\"transaction-details\">\r\n            {transactionHistory.map((transaction, index) => (\r\n              <div key={index} className=\"transaction-record\">\r\n                <h4>Transaction Date: {transaction.date}</h4>\r\n                <h4>Selected Items:</h4>\r\n                <ul>\r\n                  {transaction.items.map((item) => (\r\n                    <li key={item.id}>\r\n                      {item.name} - {item.points} Points\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No checkout history available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}