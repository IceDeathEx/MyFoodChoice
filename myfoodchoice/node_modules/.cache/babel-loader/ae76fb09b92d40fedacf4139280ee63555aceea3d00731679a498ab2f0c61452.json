{"ast":null,"code":"'use strict';\n\nconst Packet = require('../packets/packet');\nconst ClientConstants = require('../constants/client.js');\n\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\nclass Handshake {\n  constructor(args) {\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n  setScrambleData(cb) {\n    require('crypto').randomBytes(20, (err, data) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.authPluginData1 = data.slice(0, 8);\n      this.authPluginData2 = data.slice(8, 20);\n      cb();\n    });\n  }\n  toPacket(sequenceId) {\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    packet.writeInt8(this.protocolVersion);\n    packet.writeString(this.serverVersion, 'cesu8');\n    packet.writeInt8(0);\n    packet.writeInt32(this.connectionId);\n    packet.writeBuffer(this.authPluginData1);\n    packet.writeInt8(0);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n    packet.writeInt8(this.characterSet);\n    packet.writeInt16(this.statusFlags);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n    packet.writeInt8(21); // authPluginDataLength\n    packet.skip(10);\n    packet.writeBuffer(this.authPluginData2);\n    packet.writeInt8(0);\n    packet.writeString('mysql_native_password', 'latin1');\n    packet.writeInt8(0);\n    return packet;\n  }\n  static fromPacket(packet) {\n    const args = {};\n    args.protocolVersion = packet.readInt8();\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\n    args.connectionId = packet.readInt32();\n    args.authPluginData1 = packet.readBuffer(8);\n    packet.skip(1);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer[0] = packet.readInt8();\n    capabilityFlagsBuffer[1] = packet.readInt8();\n    if (packet.haveMoreData()) {\n      args.characterSet = packet.readInt8();\n      args.statusFlags = packet.readInt16();\n      // upper 2 bytes\n      capabilityFlagsBuffer[2] = packet.readInt8();\n      capabilityFlagsBuffer[3] = packet.readInt8();\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.authPluginDataLength = packet.readInt8();\n      } else {\n        args.authPluginDataLength = 0;\n        packet.skip(1);\n      }\n      packet.skip(10);\n    } else {\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n    }\n    const isSecureConnection = args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n    if (isSecureConnection) {\n      const authPluginDataLength = args.authPluginDataLength;\n      if (authPluginDataLength === 0) {\n        // for Secure Password Authentication\n        args.authPluginDataLength = 20;\n        args.authPluginData2 = packet.readBuffer(12);\n        packet.skip(1);\n      } else {\n        // length > 0\n        // for Custom Auth Plugin (PLUGIN_AUTH)\n        const len = Math.max(13, authPluginDataLength - 8);\n        args.authPluginData2 = packet.readBuffer(len);\n      }\n    }\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n      args.autPluginName = packet.readNullTerminatedString('ascii');\n    }\n    return new Handshake(args);\n  }\n}\nmodule.exports = Handshake;","map":{"version":3,"names":["Packet","require","ClientConstants","Handshake","constructor","args","protocolVersion","serverVersion","capabilityFlags","connectionId","authPluginData1","authPluginData2","characterSet","statusFlags","autPluginName","setScrambleData","cb","randomBytes","err","data","slice","toPacket","sequenceId","length","Buffer","byteLength","buffer","alloc","packet","offset","writeInt8","writeString","writeInt32","writeBuffer","capabilityFlagsBuffer","allocUnsafe","writeUInt32LE","writeInt16","skip","fromPacket","readInt8","readNullTerminatedString","readInt32","readBuffer","haveMoreData","readInt16","readUInt32LE","PLUGIN_AUTH","authPluginDataLength","readUInt16LE","isSecureConnection","SECURE_CONNECTION","len","Math","max","module","exports"],"sources":["C:/Users/runes/FYP/myfoodchoice/node_modules/mysql2/lib/packets/handshake.js"],"sourcesContent":["'use strict';\n\nconst Packet = require('../packets/packet');\nconst ClientConstants = require('../constants/client.js');\n\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\nclass Handshake {\n  constructor(args) {\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  setScrambleData(cb) {\n    require('crypto').randomBytes(20, (err, data) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.authPluginData1 = data.slice(0, 8);\n      this.authPluginData2 = data.slice(8, 20);\n      cb();\n    });\n  }\n\n  toPacket(sequenceId) {\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    packet.writeInt8(this.protocolVersion);\n    packet.writeString(this.serverVersion, 'cesu8');\n    packet.writeInt8(0);\n    packet.writeInt32(this.connectionId);\n    packet.writeBuffer(this.authPluginData1);\n    packet.writeInt8(0);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n    packet.writeInt8(this.characterSet);\n    packet.writeInt16(this.statusFlags);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n    packet.writeInt8(21); // authPluginDataLength\n    packet.skip(10);\n    packet.writeBuffer(this.authPluginData2);\n    packet.writeInt8(0);\n    packet.writeString('mysql_native_password', 'latin1');\n    packet.writeInt8(0);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const args = {};\n    args.protocolVersion = packet.readInt8();\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\n    args.connectionId = packet.readInt32();\n    args.authPluginData1 = packet.readBuffer(8);\n    packet.skip(1);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer[0] = packet.readInt8();\n    capabilityFlagsBuffer[1] = packet.readInt8();\n    if (packet.haveMoreData()) {\n      args.characterSet = packet.readInt8();\n      args.statusFlags = packet.readInt16();\n      // upper 2 bytes\n      capabilityFlagsBuffer[2] = packet.readInt8();\n      capabilityFlagsBuffer[3] = packet.readInt8();\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.authPluginDataLength = packet.readInt8();\n      } else {\n        args.authPluginDataLength = 0;\n        packet.skip(1);\n      }\n      packet.skip(10);\n    } else {\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n    }\n\n    const isSecureConnection =\n      args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n    if (isSecureConnection) {\n      const authPluginDataLength = args.authPluginDataLength;\n      if (authPluginDataLength === 0) {\n        // for Secure Password Authentication\n        args.authPluginDataLength = 20;\n        args.authPluginData2 = packet.readBuffer(12);\n        packet.skip(1);\n      } else {\n        // length > 0\n        // for Custom Auth Plugin (PLUGIN_AUTH)\n        const len = Math.max(13, authPluginDataLength - 8);\n        args.authPluginData2 = packet.readBuffer(len);\n      }\n    }\n\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n      args.autPluginName = packet.readNullTerminatedString('ascii');\n    }\n\n    return new Handshake(args);\n  }\n}\n\nmodule.exports = Handshake;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}