{"ast":null,"code":"'use strict';\n\n// based on code from Brian White @mscdex mariasql library - https://github.com/mscdex/node-mariasql/blob/master/lib/Client.js#L272-L332\n// License: https://github.com/mscdex/node-mariasql/blob/master/LICENSE\nconst RE_PARAM = /(?:\\?)|(?::(\\d+|(?:[a-zA-Z][a-zA-Z0-9_]*)))/g,\n  DQUOTE = 34,\n  SQUOTE = 39,\n  BSLASH = 92;\nfunction parse(query) {\n  let ppos = RE_PARAM.exec(query);\n  let curpos = 0;\n  let start = 0;\n  let end;\n  const parts = [];\n  let inQuote = false;\n  let escape = false;\n  let qchr;\n  const tokens = [];\n  let qcnt = 0;\n  let lastTokenEndPos = 0;\n  let i;\n  if (ppos) {\n    do {\n      for (i = curpos, end = ppos.index; i < end; ++i) {\n        let chr = query.charCodeAt(i);\n        if (chr === BSLASH) escape = !escape;else {\n          if (escape) {\n            escape = false;\n            continue;\n          }\n          if (inQuote && chr === qchr) {\n            if (query.charCodeAt(i + 1) === qchr) {\n              // quote escaped via \"\" or ''\n              ++i;\n              continue;\n            }\n            inQuote = false;\n          } else if (chr === DQUOTE || chr === SQUOTE) {\n            inQuote = true;\n            qchr = chr;\n          }\n        }\n      }\n      if (!inQuote) {\n        parts.push(query.substring(start, end));\n        tokens.push(ppos[0].length === 1 ? qcnt++ : ppos[1]);\n        start = end + ppos[0].length;\n        lastTokenEndPos = start;\n      }\n      curpos = end + ppos[0].length;\n    } while (ppos = RE_PARAM.exec(query));\n    if (tokens.length) {\n      if (curpos < query.length) {\n        parts.push(query.substring(lastTokenEndPos));\n      }\n      return [parts, tokens];\n    }\n  }\n  return [query];\n}\n;\nfunction createCompiler(config) {\n  if (!config) config = {};\n  if (!config.placeholder) {\n    config.placeholder = '?';\n  }\n  let ncache = 100;\n  let cache;\n  if (typeof config.cache === 'number') {\n    ncache = config.cache;\n  }\n  if (typeof config.cache === 'object') {\n    cache = config.cache;\n  }\n  if (config.cache !== false && !cache) {\n    cache = new (require('lru-cache'))({\n      max: ncache\n    });\n  }\n  function toArrayParams(tree, params) {\n    const arr = [];\n    if (tree.length == 1) {\n      return [tree[0], []];\n    }\n    if (typeof params == 'undefined') throw new Error('Named query contains placeholders, but parameters object is undefined');\n    const tokens = tree[1];\n    for (let i = 0; i < tokens.length; ++i) {\n      arr.push(params[tokens[i]]);\n    }\n    return [tree[0], arr];\n  }\n  function noTailingSemicolon(s) {\n    if (s.slice(-1) == ':') {\n      return s.slice(0, -1);\n    }\n    return s;\n  }\n  function join(tree) {\n    if (tree.length == 1) {\n      return tree;\n    }\n    let unnamed = noTailingSemicolon(tree[0][0]);\n    for (let i = 1; i < tree[0].length; ++i) {\n      if (tree[0][i - 1].slice(-1) == ':') {\n        unnamed += config.placeholder;\n      }\n      unnamed += config.placeholder;\n      unnamed += noTailingSemicolon(tree[0][i]);\n    }\n    const last = tree[0][tree[0].length - 1];\n    if (tree[0].length == tree[1].length) {\n      if (last.slice(-1) == ':') {\n        unnamed += config.placeholder;\n      }\n      unnamed += config.placeholder;\n    }\n    return [unnamed, tree[1]];\n  }\n  function compile(query, paramsObj) {\n    let tree;\n    if (cache && (tree = cache.get(query))) {\n      return toArrayParams(tree, paramsObj);\n    }\n    tree = join(parse(query));\n    if (cache) {\n      cache.set(query, tree);\n    }\n    return toArrayParams(tree, paramsObj);\n  }\n  compile.parse = parse;\n  return compile;\n}\n\n// named :one :two to postgres-style numbered $1 $2 $3\nfunction toNumbered(q, params) {\n  const tree = parse(q);\n  const paramsArr = [];\n  if (tree.length == 1) {\n    return [tree[0], paramsArr];\n  }\n  const pIndexes = {};\n  let pLastIndex = 0;\n  let qs = '';\n  let varIndex;\n  const varNames = [];\n  for (let i = 0; i < tree[0].length; ++i) {\n    varIndex = pIndexes[tree[1][i]];\n    if (!varIndex) {\n      varIndex = ++pLastIndex;\n      pIndexes[tree[1][i]] = varIndex;\n    }\n    if (tree[1][i]) {\n      varNames[varIndex - 1] = tree[1][i];\n      qs += tree[0][i] + '$' + varIndex;\n    } else {\n      qs += tree[0][i];\n    }\n  }\n  return [qs, varNames.map(n => params[n])];\n}\nmodule.exports = createCompiler;\nmodule.exports.toNumbered = toNumbered;","map":{"version":3,"names":["RE_PARAM","DQUOTE","SQUOTE","BSLASH","parse","query","ppos","exec","curpos","start","end","parts","inQuote","escape","qchr","tokens","qcnt","lastTokenEndPos","i","index","chr","charCodeAt","push","substring","length","createCompiler","config","placeholder","ncache","cache","require","max","toArrayParams","tree","params","arr","Error","noTailingSemicolon","s","slice","join","unnamed","last","compile","paramsObj","get","set","toNumbered","q","paramsArr","pIndexes","pLastIndex","qs","varIndex","varNames","map","n","module","exports"],"sources":["D:/UOW_FYP/FYP1/myfoodchoice/node_modules/named-placeholders/index.js"],"sourcesContent":["'use strict';\n\n// based on code from Brian White @mscdex mariasql library - https://github.com/mscdex/node-mariasql/blob/master/lib/Client.js#L272-L332\n// License: https://github.com/mscdex/node-mariasql/blob/master/LICENSE\n\nconst RE_PARAM = /(?:\\?)|(?::(\\d+|(?:[a-zA-Z][a-zA-Z0-9_]*)))/g,\nDQUOTE = 34,\nSQUOTE = 39,\nBSLASH = 92;\n\nfunction parse(query) {\n  let ppos = RE_PARAM.exec(query);\n  let curpos = 0;\n  let start = 0;\n  let end;\n  const parts = [];\n  let inQuote = false;\n  let escape = false;\n  let qchr;\n  const tokens = [];\n  let qcnt = 0;\n  let lastTokenEndPos = 0;\n  let i;\n\n  if (ppos) {\n    do {\n      for (i=curpos,end=ppos.index; i<end; ++i) {\n        let chr = query.charCodeAt(i);\n        if (chr === BSLASH)\n        escape = !escape;\n        else {\n          if (escape) {\n            escape = false;\n            continue;\n          }\n          if (inQuote && chr === qchr) {\n            if (query.charCodeAt(i + 1) === qchr) {\n              // quote escaped via \"\" or ''\n              ++i;\n              continue;\n            }\n            inQuote = false;\n          } else if (chr === DQUOTE || chr === SQUOTE) {\n            inQuote = true;\n            qchr = chr;\n          }\n        }\n      }\n      if (!inQuote) {\n        parts.push(query.substring(start, end));\n        tokens.push(ppos[0].length === 1 ? qcnt++ : ppos[1]);\n        start = end + ppos[0].length;\n        lastTokenEndPos = start;\n      }\n      curpos = end + ppos[0].length;\n    } while (ppos = RE_PARAM.exec(query));\n\n    if (tokens.length) {\n      if (curpos < query.length) {\n        parts.push(query.substring(lastTokenEndPos));\n      }\n      return [parts, tokens];\n    }\n  }\n  return [query];\n};\n\nfunction createCompiler(config) {\n  if (!config)\n  config = {};\n  if (!config.placeholder) {\n    config.placeholder = '?';\n  }\n  let ncache = 100;\n  let cache;\n  if (typeof config.cache === 'number') {\n    ncache = config.cache;\n  }\n  if (typeof config.cache === 'object') {\n    cache = config.cache;\n  }\n  if (config.cache !== false && !cache) {\n    cache = new (require('lru-cache'))({ max: ncache });\n  }\n\n  function toArrayParams(tree, params) {\n    const arr = [];\n    if (tree.length == 1) {\n      return [tree[0], []];\n    }\n\n    if (typeof params == 'undefined')\n      throw new Error('Named query contains placeholders, but parameters object is undefined');\n\n    const tokens = tree[1];\n    for (let i=0; i < tokens.length; ++i) {\n      arr.push(params[tokens[i]]);\n    }\n    return [tree[0], arr];\n  }\n\n  function noTailingSemicolon(s) {\n    if (s.slice(-1) == ':') {\n      return s.slice(0, -1);\n    }\n    return s;\n  }\n\n  function join(tree) {\n    if (tree.length == 1) {\n      return tree;\n    }\n\n    let unnamed = noTailingSemicolon(tree[0][0]);\n    for (let i=1; i < tree[0].length; ++i) {\n      if (tree[0][i-1].slice(-1) == ':') {\n        unnamed += config.placeholder;\n      }\n      unnamed += config.placeholder;\n      unnamed += noTailingSemicolon(tree[0][i]);\n    }\n\n    const last = tree[0][tree[0].length -1];\n    if (tree[0].length == tree[1].length) {\n      if (last.slice(-1) == ':') {\n        unnamed += config.placeholder;\n      }\n      unnamed += config.placeholder;\n    }\n    return [unnamed, tree[1]];\n  }\n\n  function compile(query, paramsObj) {\n    let tree;\n    if (cache && (tree = cache.get(query))) {\n      return toArrayParams(tree, paramsObj)\n    }\n    tree = join(parse(query));\n    if(cache) {\n      cache.set(query, tree);\n    }\n    return toArrayParams(tree, paramsObj);\n  }\n\n  compile.parse = parse;\n  return compile;\n}\n\n// named :one :two to postgres-style numbered $1 $2 $3\nfunction toNumbered(q, params) {\n  const tree = parse(q);\n  const paramsArr = [];\n  if (tree.length == 1) {\n    return [tree[0], paramsArr];\n  }\n\n  const pIndexes = {};\n  let pLastIndex = 0;\n  let qs = '';\n  let varIndex;\n  const varNames = [];\n  for (let i=0; i < tree[0].length; ++i) {\n    varIndex = pIndexes[tree[1][i]];\n    if (!varIndex) {\n      varIndex = ++pLastIndex;\n      pIndexes[tree[1][i]] = varIndex;\n    }\n    if (tree[1][i]) {\n      varNames[varIndex - 1] = tree[1][i];\n      qs += tree[0][i] + '$' + varIndex;\n    } else {\n      qs += tree[0][i];\n    }\n  }\n  return [qs, varNames.map(n => params[n])];\n}\n\nmodule.exports = createCompiler;\nmodule.exports.toNumbered = toNumbered;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}