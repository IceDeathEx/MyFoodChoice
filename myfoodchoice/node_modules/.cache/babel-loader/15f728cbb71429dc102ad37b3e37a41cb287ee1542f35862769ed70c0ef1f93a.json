{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import Login from './Login.js';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//     <Login />\n//   </React.StrictMode>\n// );\nconst express = require(\"express\");\nconst {\n  addUser,\n  getUser\n} = require(\"./utils/queryHelper\");\nconst app = express();\nconst genericError = \"Sorry, something went wrong!\";\napp.use(express.json());\napp.post(\"/\", async function (request, response) {\n  try {\n    const {\n      email,\n      name,\n      password,\n      gender,\n      acctype\n    } = request.body;\n    const [result] = await addUser(email, name, password, gender, acctype);\n    if (result.insertId) {\n      const [data] = await getUser(result.insertId);\n      response.send({\n        success: true,\n        result: data[0]\n      });\n    } else {\n      response.status(500).send({\n        success: false,\n        error: genericError\n      });\n    }\n  } catch (error) {\n    response.status(500).send({\n      success: false,\n      error: genericError\n    });\n  }\n});\napp.get(\"/:id\", async function (request, response) {\n  const {\n    email\n  } = request.params;\n  try {\n    const [result] = await getUser(email);\n    if (result.length > 0) {\n      response.send({\n        success: true,\n        result: result[0]\n      });\n    } else {\n      response.status(404).send({\n        success: false,\n        error: `No user found with id ${id}`\n      });\n    }\n  } catch (error) {\n    response.status(500).send({\n      success: false,\n      error: genericError\n    });\n  }\n});\napp.listen(8001);","map":{"version":3,"names":["express","require","addUser","getUser","app","genericError","use","json","post","request","response","email","name","password","gender","acctype","body","result","insertId","data","send","success","status","error","get","params","length","id","listen"],"sources":["C:/Users/runes/FYP/myfoodchoice/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import Login from './Login.js';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//     <Login />\n//   </React.StrictMode>\n// );\nconst express = require(\"express\")\nconst { addUser, getUser } = require(\"./utils/queryHelper\")\nconst app = express()\n\nconst genericError = \"Sorry, something went wrong!\"\n\napp.use(express.json())\n\napp.post(\"/\", async function (request, response) {\n  try {\n    const { email, name, password, gender, acctype } = request.body\n    const [result] = await addUser(email, name, password, gender, acctype)\n    if (result.insertId) {\n      const [data] = await getUser(result.insertId)\n      response.send({ success: true, result: data[0] })\n    } else {\n      response.status(500).send({\n        success: false,\n        error: genericError,\n      })\n    }\n  } catch (error) {\n    response.status(500).send({\n      success: false,\n      error: genericError,\n    })\n  }\n})\n\napp.get(\"/:id\", async function (request, response) {\n  const { email } = request.params\n  try {\n    const [result] = await getUser(email)\n    if (result.length > 0) {\n      response.send({ success: true, result: result[0] })\n    } else {\n      response.status(404).send({\n        success: false,\n        error: `No user found with id ${id}`,\n      })\n    }\n  } catch (error) {\n    response.status(500).send({\n      success: false,\n      error: genericError,\n    })\n  }\n})\n\napp.listen(8001)\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC3D,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AAErB,MAAMK,YAAY,GAAG,8BAA8B;AAEnDD,GAAG,CAACE,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;AAEvBH,GAAG,CAACI,IAAI,CAAC,GAAG,EAAE,gBAAgBC,OAAO,EAAEC,QAAQ,EAAE;EAC/C,IAAI;IACF,MAAM;MAAEC,KAAK;MAAEC,IAAI;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAQ,CAAC,GAAGN,OAAO,CAACO,IAAI;IAC/D,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMf,OAAO,CAACS,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,CAAC;IACtE,IAAIE,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAM,CAACC,IAAI,CAAC,GAAG,MAAMhB,OAAO,CAACc,MAAM,CAACC,QAAQ,CAAC;MAC7CR,QAAQ,CAACU,IAAI,CAAC;QAAEC,OAAO,EAAE,IAAI;QAAEJ,MAAM,EAAEE,IAAI,CAAC,CAAC;MAAE,CAAC,CAAC;IACnD,CAAC,MAAM;MACLT,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACxBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAElB;MACT,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdb,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACxBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAElB;IACT,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFD,GAAG,CAACoB,GAAG,CAAC,MAAM,EAAE,gBAAgBf,OAAO,EAAEC,QAAQ,EAAE;EACjD,MAAM;IAAEC;EAAM,CAAC,GAAGF,OAAO,CAACgB,MAAM;EAChC,IAAI;IACF,MAAM,CAACR,MAAM,CAAC,GAAG,MAAMd,OAAO,CAACQ,KAAK,CAAC;IACrC,IAAIM,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE;MACrBhB,QAAQ,CAACU,IAAI,CAAC;QAAEC,OAAO,EAAE,IAAI;QAAEJ,MAAM,EAAEA,MAAM,CAAC,CAAC;MAAE,CAAC,CAAC;IACrD,CAAC,MAAM;MACLP,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACxBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAG,yBAAwBI,EAAG;MACrC,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdb,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACxBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAElB;IACT,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFD,GAAG,CAACwB,MAAM,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}